architecture: replicaset
auth:
  rootUser: tapir
  usernames:
    - games
  databases:
    - games
  existingSecret: mongodb-games-secret
initdbScripts:
  init.js: |
    let databases = ['games'];
    databases.forEach((name) => {
      db = db.getSiblingDB(name);
      db.grantRolesToUser(name, [{
        role: "readWrite",
        db: name
      }]);
      db.events.createIndex({ "AggregateId": 1 });
      db.events.createIndex({ "Timestamp": 1 });
    });
replicaCount: 2
nodeSelector:
  type: database-games
arbiter:
  nodeSelector:
    type: database-games
  resources:
    requests:
      cpu: 1
      memory: 256Mi
    limits:
      cpu: 2
      memory: 512Mi
podAntiAffinityPreset: hard
persistence:
  size: 1Gi
resources:
  requests:
    cpu: 1
    memory: 256Mi
  limits:
    cpu: 2
    memory: 512Mi